services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: app
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U app -d app']
      interval: 5s
      timeout: 3s
      retries: 30

  api:
    build:
      context: ../app
      dockerfile: Dockerfile.dev
    environment:
      DATABASE_URL: postgres://app:app@db:5432/app
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: 'true'
      CHOKIDAR_INTERVAL: '300'
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '8080:8080'
    volumes:
      - ../app/src:/app/src:rw,delegated
      - ../app/package.json:/app/package.json:ro
      - ../app/tsconfig.json:/app/tsconfig.json:ro
      - /app/node_modules

  importer:
    build:
      context: ../import
    environment:
      DATABASE_URL: postgres://app:app@db:5432/app
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../schema:/schema:ro
      - ../data:/data

  k6:
    image: grafana/k6:0.49.0
    depends_on:
      api:
        condition: service_started
    environment:
      BASE_URL: http://api:8080
    volumes:
      - ../workload:/workload
    # entrypoint: ['tail', '-f', '/dev/null']

  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:v0.15.0
    environment:
      DATA_SOURCE_NAME: postgres://app:app@db:5432/app?sslmode=disable
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '9187:9187'
    command: ['--web.listen-address=:9187']

  prometheus:
    image: prom/prometheus:v2.51.1
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=15d
      - --web.enable-lifecycle
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - '9090:9090'
    depends_on:
      - postgres-exporter

  grafana:
    image: grafana/grafana:10.4.2
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: 'false'
    ports:
      - '3000:3000'
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  pgdata:
  grafana-data:
  prometheus-data:
